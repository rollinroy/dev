ARG base_os=ubuntu
ARG itag=20.04
ARG ubuntu_rep
FROM $ubuntu_rep$base_os:$itag
ARG arch_type

# install base packages for development, r, etc
RUN apt-get update && apt-get install -y \
   software-properties-common \
   dirmngr \
   gnupg \
   apt-transport-https \
   ca-certificates

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get update && apt-get install -y tzdata
RUN apt-get update && apt-get install -y \
  sudo \
  build-essential \
  python-dev \
  zlib1g-dev \
  git \
  nodejs \
  npm \
  gnome-tweak-tool \
  openjdk-8-jdk \
  python-numpy \
  wget \
  cpio \
  iputils-ping \
  texinfo \
  gfortran \
  libreadline-dev \
  bzip2 \
  libbz2-dev \
  vim \
  lzma \
  liblzma-dev \
  libpcre3-dev \
  libcurl4-gnutls-dev \
  default-jre \
  default-jdk \
  nfs-common \
  libpng-dev \
  libcairo2-dev \
  libnetcdf-dev \
  libxml2-dev \
  libpango1.0-dev \
  pandoc \
  freeglut3-dev \
  libdatetime-perl \
  imagemagick-6.q16 \
  libpcre2-dev \
  libgsl-dev \
  libblas-dev \
  liblapack-dev \
  libgdal-dev \
  libudunits2-dev \
  libtiff5-dev \
  libmagick++-dev \
  libavfilter-dev \
  cargo \
  libpoppler-cpp-dev \
  libtesseract-dev \
  tesseract-ocr-eng \
  cmake  \
  python3-pip \
  curl \
  rsync

RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# install python 2.7 https://linuxconfig.org/install-python-2-on-ubuntu-20-04-focal-fossa-linux
RUN apt-add-repository universe
RUN apt-get update && apt-get install -y python2-minimal

# config python 2.7 to be "python" https://linuxconfig.org/ubuntu-20-04-python-version-switch-manager
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
RUN update-alternatives --install /usr/bin/python python /usr/bin/python2 2

# hpc related
RUN apt-get update && apt-get install -y \
    mpich \
    libmpich-dev \
    libmpich12 \
    h5utils \
    hdf5-tools \
    libhdf5-doc \
    libopenmpi-dev \
    libopenmpi3 \
    openmpi-doc

# mkl - note: installing mkl installs MKL blas and lapack --
# and blas/lapack is required for many apps like R. For non-ARM only
RUN if [ -z $arch_type ]; then \
      ARCH=`uname -m`; \
    else \
      ARCH=$arch_type; \
    fi && \
    echo "arch is $ARCH"; \
    if [ "$ARCH" != "${ARCH%%arm*}" ]; then \
      echo "mkl doesn't supprt $ARCH and is not installed"; \
    else \
      echo "installing mkl"; \
      DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y intel-mkl && \
      update-alternatives --set libblas.so.3-x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/libmkl_rt.so; \
      update-alternatives --set liblapack.so.3-x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/libmkl_rt.so; \
      echo "mkl installed"; \
    fi

# install tab-complete for docker
RUN curl -L https://raw.githubusercontent.com/docker/compose/v2.7.0/contrib/completion/bash/docker-compose  \
         -o /etc/bash_completion.d/docker-compose

# create the mac group and royboy account
RUN addgroup mac --gid=1001 && \
    adduser --ingroup mac --uid 1000 --disabled-password --gecos GECOS royboy && \
    usermod -aG sudo royboy && \
    echo "royboy:royboy" | chpasswd

# suppress passwd for sudoers
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> \
    /etc/sudoers
